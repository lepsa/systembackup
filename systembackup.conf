# Yes, this is just a bash file that is 'source'ed into the main
# script. I know it is terrible, and that I really should be using
# something that doesn't allow arbitary code injection, but I _really_
# don't like dealing with bash that much, but I have dug this hole
# already and it works. Ideally I would roll this into haskell so
# that I can get some sexy type checking and inference, but then
# I have much the same problem of dealing with ssh/rsync/cp/openssl,
# but now with extra monadic stuff around it.

LOCAL_BACKUP_DIRECTORY="/mnt/backup"
SOURCES="/home /etc"
LOCAL_BACKUPS_TO_KEEP=2500

# OpenSSL encryption cipher. See "openssl enc" for more info.
CIPHER="-aes-256-cbc"

# OpenSSL password. See "openssl pass" for more info.
PASSWORD="pass:password"
#PASSWORD="enc:environment variable"
#PASSWORD="file:password file"

# Array to store the remote location data.
# One config entry per line
# Format is "server user ssh_id backup_dir backups_to_keep"
REMOTE_CONFIG=(
"server user ssh_id /mnt/backup number_of_backups"
)
